{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","answer","setAnswer","operator","setOperator","performOperation","number","className","onClick","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA8MeA,MA3Mf,WACE,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,SAASC,EAAiBC,GACxB,OAAQH,GACN,IAAK,IACHD,EAAUD,EAASK,GACnB,MAEF,IAAK,IACHJ,EAAUD,EAASK,GACnB,MAEF,IAAK,IACHJ,EAAUD,EAASK,GACnB,MAEF,IAAK,IACHJ,EAAUD,EAASK,GACnB,MAEF,QACEJ,EAAUI,IAIhB,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,mBAAGA,UAAU,gBAAb,SAA8BN,MAEhC,sBAAKM,UAAU,4BAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBACEA,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,SAAUC,MAAO,SAC3CH,QAAS,WACPN,EAAU,MAJd,mBAUF,sBAAKK,UAAU,MAAf,UACE,qBACEA,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,WACPJ,EAAY,KACZC,KALJ,kBAWF,sBAAKE,UAAU,MAAf,UACE,qBACEA,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,WACPJ,EAAY,KACZC,KALJ,kBAWF,sBAAKE,UAAU,MAAf,UACE,qBACEA,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVC,QAAS,WACPN,EAAUD,EAAS,MAHvB,eAQA,qBACEM,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,WACPJ,EAAY,KACZC,KALJ,kBAWF,sBAAKE,UAAU,MAAf,UACE,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,kBAAf,eACA,qBACEA,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,UAF5B,eAMA,qBACEH,UAAU,kBACVE,MAAO,CAAEC,gBAAiB,QAASC,MAAO,SAC1CH,QAAS,WACPJ,EAAY,KACZC,KALJ,2BCjLGO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ea22fd9b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [answer, setAnswer] = useState(0);\n  const [operator, setOperator] = useState(\"\");\n\n  function performOperation(number) {\n    switch (operator) {\n      case \"+\":\n        setAnswer(answer + number);\n        break;\n\n      case \"-\":\n        setAnswer(answer - number);\n        break;\n\n      case \"*\":\n        setAnswer(answer * number);\n        break;\n\n      case \"/\":\n        setAnswer(answer / number);\n        break;\n\n      default:\n        setAnswer(number);\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"calculator-screen neumorphism\">\n        <div className=\"screen neumorphism\">\n          <p className=\"answer-screen\">{answer}</p>\n        </div>\n        <div className=\"button-holder neumorphism\">\n          <div className=\"row\">\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"7\");\n              }}\n            >\n              7\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"8\");\n              }}\n            >\n              8\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"9\");\n              }}\n            >\n              9\n            </div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"orange\", color: \"black\" }}\n              onClick={() => {\n                setAnswer(\"0\");\n              }}\n            >\n              AC\n            </div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"7\");\n              }}\n            >\n              7\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"8\");\n              }}\n            >\n              8\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"9\");\n              }}\n            >\n              9\n            </div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"black\", color: \"white\" }}\n              onClick={() => {\n                setOperator(\"*\");\n                performOperation();\n              }}\n            >\n              *\n            </div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"4\");\n              }}\n            >\n              4\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"5\");\n              }}\n            >\n              5\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"6\");\n              }}\n            >\n              6\n            </div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"black\", color: \"white\" }}\n              onClick={() => {\n                setOperator(\"/\");\n                performOperation();\n              }}\n            >\n              /\n            </div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"1\");\n              }}\n            >\n              1\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"2\");\n              }}\n            >\n              2\n            </div>\n            <div\n              className=\"col neumorphism\"\n              onClick={() => {\n                setAnswer(answer + \"3\");\n              }}\n            >\n              3\n            </div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"black\", color: \"white\" }}\n              onClick={() => {\n                setOperator(\"+\");\n                performOperation();\n              }}\n            >\n              +\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col neumorphism\"></div>\n            <div className=\"col neumorphism\">0</div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"orange\" }}\n            >\n              =\n            </div>\n            <div\n              className=\"col neumorphism\"\n              style={{ backgroundColor: \"black\", color: \"white\" }}\n              onClick={() => {\n                setOperator(\"-\");\n                performOperation();\n              }}\n            >\n              -\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}